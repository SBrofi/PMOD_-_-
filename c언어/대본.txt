C언어 세미나 발표를 맡게된 발표자 배승재입니다.
먼저 목차부터 설명하겠습니다.
조건,반복,함수,배열 순으로 설명을 하겠습니다.
먼저 조건을 설명하도록 하겠습니다.
조건에는 이프문,이프엘스문,이프 이프엘스 엘스문으로 총 3가지의 조건문을 설명하도록 하겠습니다.
먼저 엘스문을 설명하겠습니다. 위의 그림과 같이 이프문의 조건문이 참이면 실행문을 실행하고 거짓이면 건너뛰어서 실행을 하는 
조건문입니다.
다음은 이프 엘스문입니다.
이프엘스문은 이프조건문이 참일때 실행문을 실행하는 것 까지는 동일합니다. 하지만 거짓일때 엘스문의 실행문을 실행하는 
조건문입니다.
더많은 조건을 만들고 싶다면
이프,엘스이프,엘스 문을 사용하면 됩니다. 이 조건문은 만약 첫 이프문의 조건문이 거짓이 되면
그 밑의 엘스이프문의 조건문과 비교를 하게 됩니다. 그후 참이면 실행을 하게 됩니다. 여기서 자신이 추가시키고 싶은 조건의
선택지를 더더 늘리고 싶으면 엘스 이프 조건문을 더더 추가 시키면됩니다. 결국 모든 조건문이 거짓이 되면 엘스의 실행문을
실행하게 되는 조건문입니다.
예는 즉흥적으로 하고

다음은 반복문을 설명하도록 하겠습니다.
반복은 왜써야할까요?? 만약 교수님께서 숫자 6을 곱하기를 하지말고 덧셈으로 1000번 더해라 라는 지시를 내렸습니다.
6더하기 6은 12이고 12더하기 6은 18이고.... 이것을 일일히 더하기가 어렵습니다. 이것을 쉽게 해주기 위해 우리는 c언어의
반복문을 사용하여 6을 1000번더하는 프로그램을 만들수있습니다. 이처럼 같은일을 여러번 해야할때 좀더 몸이 편하고 빠르게
해줄수있도록해주는것이 반복문입니다.
그러면 반복문에 대해 설명을 들어가기 전에 반복문은 와일문 포문 그리고 브레이크 문과 컨티뉴문 순으로 설명하도록 
하겠습니다.
먼저 와일문은 그림과 같이 와일문에 조건문이 참이면 계속해서 문장을 반복을 시켜주고 만약 조건문이
거짓이 되면 탈출을 하게되는 탈출을하게되는 반복문입니다.
여기서 무한루프를 만들기 위해 조건문 칸에 참값 1을 넣어주면 계속해서 참이되어 무한 루프를 발생하게 합니다.
와일의 이해를 돕기위해 예시를 하나 설명해드리겠습니다. 
즉흥쓰
그다음은 포문입니다.
포문은 포문다음 초기식,조건식,증감식이 있는데 초기식 다음에 조건식이 참이면 문자을 실행하고 그후 증감식을 통해 초기식에
변화를 줍니다. 다시 조건식으로가서 참이면 문자를 실행하고 그후 변화를 해주고 조건식이 거짓이될때까지 반복을 해주는
반복문입니다. 와일에서는 증감식을 따로 넣어주었지만 포문은 증감식을 같이 포함시킬수 있어 더욱 깔끔하게 식을 표현할수있
습니다.
포문의 이해를 돕기위해 예시를 하나 설명해드리겠습니다.
즉흥쓰
이번에는 증감식이 감소하는 예시를 하나 더 들겠습니다.
즉흥쓰
그다음은 브레이크문입니다.
브레이크문은 무한루프문을 벗어나기 위해 사용되는 문장입니다. 무한루프 문에 조건 식을 이프를 넣어준후 무한히 반복하다가
이프문에 참이되는 값이 되어버리면 브레이크문을 통해 무한루프를 빠져나올수있게 됩니다.
그다음은 컨티뉴문은 브레이크문과 같이 먼저 조건문 이프를 넣어줍니다. 그후 무한히 반복하다 조건문이 참이 되면 컨티뉴
문을 통해 조건식및의 반복과정을 생략하고 다시 무한루프 처음으로 가게해주는 문장입니다.
그다음은 함수를 설명하겠습니다.
함수는 왜 필요할까요?  에를 들오 교수님께서 안녕하세요 전자공학과 16학번 승재입니다. 를 10번 나타내는 프로그램을
작성하라고 했는데, 저희에게는 방금설명한 반복문으로 10번을 나타낼수있습니다. 근데 교수님께서는 반복문말고 일일히 손으로 한번 작성을 해보라고
하십니다;;; 그렇다면 일일히 프린트 에프 안녕하세요 전자공학과 16학번 승재를 쓰기에는 손이아프고 번거롭습니다. 그럴때에 편리하게 해주는 것이 함수가 되겠습니다.
함수는 프로그램을 구성하는 기본적인 구성요소입니다.
특징으로 써는 서로 구별되는 이름을 가지고 있고, 특정작업을 수행합니다. 함수는 입력받을수 있고 수행결과도 반환 받을수 있습니다.
종류는 이미 스튜디오에서 정해준 라이브러리함수, 그리고 사용자가 따로 지정할수있는 사용자 지정 함수가 있습니다.
함수의 장점으로 써는 코드가 중복되는 것을 막을수 있습니다.  그리고 한번 적용된 함수는 여러번 사용가능합니다. 마지막으로 복잡한 코드를 하나의 함수로 만들어서 개발과정이
쉽고 체계적으로 사용되고 유지보수가 용이해집니다.
함수의 사용법은 그림과 같이 인트는 반환 자료형으로 썸은 함수이름 그리고 매개변수 목록을 작성할수있습니다. 이 부분은 함수 헤더 즉 머리라 볼수있습니다.
그 밑은 함수에 넣을 식을 작성하면 됩니다. 그후 이 함수 썸을 호출하면 함수식이 표현이 됩니다.
이해를 돕기위해 예시를 하나 들겠습니다.
즉흥
그다음 배열을 설명하겠습니다.
배열은 왜 필요할까요??? 교수님께서 저에게 학생 10명의 점수를 주었습니다. 그후 각각 평균을 게산하라고 하시는데 일일히 점수를 변수에 저장을 해야합니다. 만약 교수님이
10000명의 점수를 변수로 넣어라 하였다면 너무 번거로워 집니다. 이를 편리하게 하기위해 배열을 사용하여 간단하고 빠르게 변수를 저장 할수있습니다.
배열이란? 동일한 타입의 데이터가 여러개 저장되어 있는 데이터 저장 장소입니다.
장점은 서로 관련된 데이터를 상자속에 넣듯이 한곳에 모아두어 쉽고 편리하게 호출할수있도록 해줍니다.
배열은 다차원으로 표현할수 있는데 1차원과 2차원 배열을 설명해드리겠습니다.
즉흥


