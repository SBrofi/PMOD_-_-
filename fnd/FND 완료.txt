
#define __DELAY_BACKWARD_COMPATIBLE__
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>

static unsigned char fnd[10] =
	{0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
static unsigned char fnd1[8] =
	{0x7F,0x66,0x5B,0x06,0x3F,0x3F,0x3F,0x3F};
static unsigned char fnd2[8] =
	{0x3F,0x3F,0x3F,0x3F,0x7F,0x66,0x5B,0x06};
volatile unsigned char puls,flag=0;
int i,j,led;
int tik=500;
int t=100;

void fnd_1(void)
{
	for(j=0;j<10;j++)
	{
		PORTD = ~0x10;		//1의 자리 세그먼트 증가
		PORTC = ~fnd[puls%10];
		_delay_ms(t);
		PORTD = ~0x20;		//10의 자리 세그먼트 증가
		PORTC = ~fnd[(puls%100)/10];
		_delay_ms(t);
	}
}
void fnd_stop(void)
{
	for(j=0;j<10;j++)
	{
		PORTD = ~0x10;		//1의 자리 세그먼트 증가
		PORTC = ~fnd[puls%10];
		_delay_ms(t);
		PORTD = ~0x20;		//10의 자리 세그먼트 증가
		PORTC = ~fnd[(puls%100)/10];
		_delay_ms(t);
	}
}
void fnd_speed(void)
{
	tik=tik-((puls%100)/10);
	for(j=0;j<5;j++)
	{
		PORTD = ~0x10;		//1의 자리 세그먼트 증가
		PORTC = ~fnd[puls%10];
		_delay_ms(tik);
		PORTD = ~0x20;		//10의 자리 세그먼트 증가
		PORTC = ~fnd[(puls%100)/10];
		_delay_ms(tik);
	}
}
void fnd_speedstop(void)
{
		PORTD = ~0x10;		//1의 자리 세그먼트 증가
		PORTC = ~fnd[puls%10];
		_delay_ms(tik);
		PORTD = ~0x20;		//10의 자리 세그먼트 증가
		PORTC = ~fnd[(puls%100)/10];
		_delay_ms(tik);
}
void fnd_boot(void)
{
	for(j=0;j<70;j++)
	{
		PORTD = ~0x10;		//1의 자리 세그먼트 증가
		PORTC = ~fnd2[i];
		_delay_ms(100);
		PORTD = ~0x20;		//10의 자리 세그먼트 증가
		PORTC = ~fnd1[i];
		_delay_ms(100);
	}

}
ISR(INT0_vect)
{
	if((~PIND & 0x0f)==0x01)
	{
		flag=1;
	}
}
ISR(INT1_vect)
{
	if((~PIND & 0x0f)==0x02)
	{
		flag=0;
	}
}
ISR(INT2_vect)
{
	if((~PIND & 0x0f)==0x04)
	{
		flag=3;
	}
}
ISR(INT3_vect)
{
	if((~PIND&0x0f)==0x08)
	{
		flag=2;
	}
}
int main()
{
	DDRA=0xff;
	DDRC=0xff;
	DDRD=0x00;
	EIMSK=0x0f;
	EICRA=0xaa;
	sei();

	while(1)
	{
		if(flag==0)
		{
			for(i=0;i<10;i++)
			{
					fnd_stop();		//fnd_1 puls를 증가값없이 그대로 주어서 가만히 있도록 함
					fnd_speedstop();

			}
		}
		if(flag==1)
		{
			tik=500;
			t=100;
			fnd_1();
			puls++;
		}
		else if(flag==2)
		{
				led = 0x80;
				for(i=0;i<8;i++)
				{
					PORTA=~led;
					fnd_boot();
					led=(led>>1);
					_delay_ms(100);
				}
				PORTA=0xff;
		}
		else if(flag==3)
		{
				fnd_speed();
				puls++;
			if(puls==100)
			{
				puls=0;
				tik=500;
			}
			
		}
	}
}